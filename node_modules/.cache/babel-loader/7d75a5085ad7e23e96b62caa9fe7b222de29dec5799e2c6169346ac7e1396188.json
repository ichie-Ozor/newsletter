{"ast":null,"code":"var _jsxFileName = \"C:\\\\newsletter\\\\newsletter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Email from './Email.js';\nimport Success from './Success.js';\nimport Update from './update.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [email, setEmail] = useState();\n  const [clicked, setClicked] = useState(false);\n  const onSubmitHandler1 = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('https://localhost:8000/account', {\n        method: 'POST',\n        header: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(email)\n      });\n      const result = await response.json();\n      console.log(\"success:\", result);\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n    setClicked(true);\n  };\n  console.log(clicked);\n  console.log(\"see me here\", email);\n  const onChange = e => {\n    setEmail(e.target.value);\n    console.log(e);\n  };\n  const onClick1 = () => {\n    setClicked(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: clicked ? /*#__PURE__*/_jsxDEV(Success, {\n      email: email,\n      onClick: onClick1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Update, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Email, {\n        onSubmitHandler: onSubmitHandler1,\n        onChange: onChange,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ecdDsFjWWvU4r5bBbRah8Wxb/0o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Email","Success","Update","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","email","setEmail","clicked","setClicked","onSubmitHandler1","event","preventDefault","response","fetch","method","header","body","JSON","stringify","result","json","console","log","error","onChange","e","target","value","onClick1","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmitHandler","_c","$RefreshReg$"],"sources":["C:/newsletter/newsletter/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Email from './Email.js';\nimport Success from './Success.js';\nimport Update from './update.js';\n\n\nfunction App() {\n  const [email, setEmail] = useState()\n  const [clicked, setClicked] = useState(false)\n\n  const onSubmitHandler1 = async(event) => {\n    event.preventDefault()\n    try{\n      const response = await fetch('https://localhost:8000/account', {\n        method: 'POST',\n        header: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(email),\n      });\n      const result = await response.json()\n      console.log(\"success:\", result)\n    } catch (error){\n      console.log(\"Error:\", error)\n    }\n    setClicked(true)\n  }\n  console.log(clicked)\n  console.log(\"see me here\", email)\n\nconst onChange = (e) => {\n  setEmail(e.target.value)\n  console.log(e)\n  \n}\n\nconst onClick1 = () => {\n  setClicked(false)\n}\n\n  return (\n    <div className=\"App\">\n      {clicked ? \n      <Success email={email} onClick={onClick1}/> :\n      <>\n    <Update />\n    <Email onSubmitHandler={onSubmitHandler1} onChange={onChange} value={email}/>\n    </>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,MAAM,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC;EACpC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,gBAAgB,GAAG,MAAMC,KAAK,IAAK;IACvCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAG;MACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,MAAM,EAAE;UACN,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,KAAK;MAC5B,CAAC,CAAC;MACF,MAAMc,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,MAAM,CAAC;IACjC,CAAC,CAAC,OAAOI,KAAK,EAAC;MACbF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,KAAK,CAAC;IAC9B;IACAf,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EACDa,OAAO,CAACC,GAAG,CAACf,OAAO,CAAC;EACpBc,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEjB,KAAK,CAAC;EAEnC,MAAMmB,QAAQ,GAAIC,CAAC,IAAK;IACtBnB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACxBN,OAAO,CAACC,GAAG,CAACG,CAAC,CAAC;EAEhB,CAAC;EAED,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACrBpB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEC,oBACER,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBvB,OAAO,gBACRP,OAAA,CAACH,OAAO;MAACQ,KAAK,EAAEA,KAAM;MAAC0B,OAAO,EAAEH;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBAC3CnC,OAAA,CAAAE,SAAA;MAAA4B,QAAA,gBACF9B,OAAA,CAACF,MAAM;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVnC,OAAA,CAACJ,KAAK;QAACwC,eAAe,EAAE3B,gBAAiB;QAACe,QAAQ,EAAEA,QAAS;QAACG,KAAK,EAAEtB;MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA,eAC3E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/B,EAAA,CA5CQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}